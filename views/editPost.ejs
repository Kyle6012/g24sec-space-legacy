<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Post</title>
  <!-- The modal.css file (if any additional modal styles exist) is linked here -->
  <link rel="stylesheet" href="/css/modal.css">
  <script src="/socket.io/socket.io.js"></script>
  <style>
    /* Default Light Theme */
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f2f5;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      transition: background 0.3s, color 0.3s;
    }

    h1 {
      color: #1877f2;
      font-size: 28px;
    }

    .form-container {
      background-color: white;
      width: 100%;
      max-width: 600px;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
    }

    label {
      font-size: 14px;
      color: #4b4f56;
      margin-top: 10px;
      display: block;
    }

    input, textarea {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      margin-bottom: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 16px;
      transition: border-color 0.3s;
    }

    button {
      width: 100%;
      padding: 12px;
      background-color: #1877f2;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background 0.3s;
    }

    button:hover {
      background-color: #165eab;
    }

    button:disabled {
      background-color: #95a5a6;
      cursor: not-allowed;
    }

    /* Spinner Styles */
    .spinner {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-top: 4px solid #3498db;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
      display: none;
      z-index: 3000;
    }

    @keyframes spin {
      0% { transform: translate(-50%, -50%) rotate(0deg); }
      100% { transform: translate(-50%, -50%) rotate(360deg); }
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.4);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 300px;
      border-radius: 8px;
      text-align: center;
      position: relative;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }

    .close:hover,
    .close:focus {
      color: #000;
      text-decoration: none;
      cursor: pointer;
    }

    /* Dark Theme Overrides */
    body.dark-mode {
      background-color: #18191a;
      color: #e4e6eb;
    }

    body.dark-mode .form-container {
      background-color: #242526;
      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);
    }

    body.dark-mode button {
      background-color: #1877f2;
    }

    body.dark-mode button:hover {
      background-color: #165eab;
    }

    body.dark-mode .modal-content {
      background-color: #3a3b3c;
      color: #e4e6eb;
      border-color: #444;
      border-radius: 8px;
    }

    body.dark-mode label,
    body.dark-mode input,
    body.dark-mode textarea {
      color: #e4e6eb;
      background-color: #3a3b3c;
      border: 1px solid #555;
    }
  </style>
</head>
<body>
  <h1>Edit Post</h1>
  <div class="form-container">
    <form id="editPostForm" action="/feed/edit/<%= post.id %>" method="POST" enctype="multipart/form-data">
      <label for="title">Title:</label>
      <input type="text" name="title" id="title" value="<%= post.title %>" required><br><br>

      <label for="content">Content:</label>
      <textarea name="content" id="content" rows="4" required><%= post.content %></textarea><br><br>

      <button type="submit" id="updateButton">Update Post</button>
    </form>
  </div>

  <!-- Spinner element -->
  <div id="spinner" class="spinner"></div>

  <!-- The Modal for feedback -->
  <div id="messageModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <p id="modalMessage"></p>
    </div>
  </div>

  <!-- Include theme.js to apply theme (which reads from localStorage) -->
  <script src="/js/theme.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io({ withCredentials: true });
    const form = document.getElementById('editPostForm');
    const updateButton = document.getElementById('updateButton');
    const spinner = document.getElementById('spinner');
    const modal = document.getElementById('messageModal');
    const modalMessage = document.getElementById('modalMessage');
    const closeModal = document.querySelector('.close');

    form.addEventListener('submit', async function(event) {
      event.preventDefault();
      updateButton.disabled = true;
      spinner.style.display = "block";

      const formData = new FormData(this);
      try {
        const response = await fetch(this.action, {
          method: 'POST',
          body: formData
        });
        spinner.style.display = "none";
        updateButton.disabled = false;

        const result = await response.json();
        if (response.ok) {
          modalMessage.textContent = "Post updated successfully!";
          modalMessage.className = 'success';
          modal.style.display = "block";
          // Redirect to feed after a short delay
          setTimeout(() => {
            window.location.href = "/feed";
          }, 1500);
        } else {
          modalMessage.textContent = result.message || "Failed to update post. Please try again.";
          modalMessage.className = 'error';
          modal.style.display = "block";
        }
      } catch (error) {
        console.error('Error during post update:', error);
        spinner.style.display = "none";
        updateButton.disabled = false;
        modalMessage.textContent = "An error occurred while updating the post. Please try again.";
        modalMessage.className = 'error';
        modal.style.display = "block";
      }
    });

    closeModal.onclick = function() {
      modal.style.display = "none";
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }
  </script>
</body>
</html>
